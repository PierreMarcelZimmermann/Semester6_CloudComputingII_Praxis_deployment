- name: Start app on VM
  hosts: myVM
  become: yes
  tasks:

    # Ensure pip for Python 3 is installed
    - name: Install pip for Python 3
      apt:
        name: python3-pip
        state: present
        update_cache: yes

    # Clone the git repository into /home/azureadmin/app
    - name: Clone the git repo
      git:
        repo: 'https://github.com/PierreMarcelZimmermann/Semester6_CloudComputingII_Praxis_app.git'
        dest: /home/azureadmin/app
        clone: yes

    # Copy the aivision config file to the backend directory
    - name: Copy aivision config
      copy:
        src: aivision_config.json
        dest: /home/azureadmin/app/backend/aivision_config.json

    # Install the backend dependencies with pip
    - name: Install backend requirements with pip
      pip:
        requirements: /home/azureadmin/app/backend/requirements.txt

    # Start the Flask app in the background
    - name: Start Flask app in background
      shell: |
        nohup flask run --host=0.0.0.0 --port=5000 > /home/azureadmin/app/backend/flask.log 2>&1 &
      args:
        chdir: /home/azureadmin/app/backend

    # Install Node.js and npm
    - name: Install Node.js and npm
      apt:
        name:
          - curl
          - ca-certificates
          - lsb-release
          - apt-transport-https
        state: present
        update_cache: yes

    # Add NodeSource APT repository for Node.js
    - name: Add NodeSource APT repository
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
      args:
        creates: /usr/bin/node  # Skip if Node.js is already installed

    # Install Node.js and npm (with the correct package)
    - name: Install Node.js and npm (with the correct package)
      apt:
        name:
          - nodejs
        state: present
        update_cache: yes

    # Install frontend dependencies using npm
    - name: Install frontend dependencies with npm
      npm:
        path: /home/azureadmin/app/frontend
        state: present

    # Build the frontend (with npx next build)
    - name: Build frontend
      shell: |
        cd /home/azureadmin/app/frontend && npx next build
      args:
        chdir: /home/azureadmin/app/frontend

    # Start the Next.js app in the background using npx
    - name: Start Next.js app with npx in background
      shell: |
        nohup npx next dev --port 3000 > /home/azureadmin/app/frontend/next.log 2>&1 &
      args:
        chdir: /home/azureadmin/app/frontend